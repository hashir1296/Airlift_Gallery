// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.airlift.android.modules.curatedList.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class CuratedPhotosNetworkResponseJsonAdapter(
  moshi: Moshi
) : JsonAdapter<CuratedPhotosNetworkResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("next_page", "prev_page", "page",
      "per_page", "photos")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "nextPage")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "page")

  private val nullableListOfPhotoAdapter: JsonAdapter<List<CuratedPhotosNetworkResponse.Photo>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java,
      CuratedPhotosNetworkResponse.Photo::class.java), emptySet(), "photos")

  public override fun toString(): String = buildString(50) {
      append("GeneratedJsonAdapter(").append("CuratedPhotosNetworkResponse").append(')') }

  public override fun fromJson(reader: JsonReader): CuratedPhotosNetworkResponse {
    var nextPage: String? = null
    var prevPage: String? = null
    var page: Int? = null
    var perPage: Int? = null
    var photos: List<CuratedPhotosNetworkResponse.Photo>? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> nextPage = nullableStringAdapter.fromJson(reader)
        1 -> prevPage = nullableStringAdapter.fromJson(reader)
        2 -> page = nullableIntAdapter.fromJson(reader)
        3 -> perPage = nullableIntAdapter.fromJson(reader)
        4 -> photos = nullableListOfPhotoAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return CuratedPhotosNetworkResponse(
        nextPage = nextPage,
        prevPage = prevPage,
        page = page,
        perPage = perPage,
        photos = photos
    )
  }

  public override fun toJson(writer: JsonWriter, value_: CuratedPhotosNetworkResponse?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("next_page")
    nullableStringAdapter.toJson(writer, value_.nextPage)
    writer.name("prev_page")
    nullableStringAdapter.toJson(writer, value_.prevPage)
    writer.name("page")
    nullableIntAdapter.toJson(writer, value_.page)
    writer.name("per_page")
    nullableIntAdapter.toJson(writer, value_.perPage)
    writer.name("photos")
    nullableListOfPhotoAdapter.toJson(writer, value_.photos)
    writer.endObject()
  }
}
