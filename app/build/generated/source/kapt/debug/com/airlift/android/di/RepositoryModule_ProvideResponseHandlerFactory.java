// Generated by Dagger (https://dagger.dev).
package com.airlift.android.di;

import android.content.Context;
import com.airlift.android.network.ResponseHandler;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideResponseHandlerFactory implements Factory<ResponseHandler> {
  private final Provider<Context> contextProvider;

  public RepositoryModule_ProvideResponseHandlerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ResponseHandler get() {
    return provideResponseHandler(contextProvider.get());
  }

  public static RepositoryModule_ProvideResponseHandlerFactory create(
      Provider<Context> contextProvider) {
    return new RepositoryModule_ProvideResponseHandlerFactory(contextProvider);
  }

  public static ResponseHandler provideResponseHandler(Context context) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideResponseHandler(context));
  }
}
