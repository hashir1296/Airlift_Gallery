// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.airlift.android.modules.curatedList.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class BrandItemDetailResponse_SuccessJsonAdapter(
  moshi: Moshi
) : JsonAdapter<BrandItemDetailResponse.Success>() {
  private val options: JsonReader.Options = JsonReader.Options.of("color", "details", "images",
      "original_price", "path", "sale_price", "sku", "title", "url")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "color")

  private val nullableListOfNullableStringAdapter: JsonAdapter<List<String?>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, String::class.java), emptySet(),
      "details")

  public override fun toString(): String = buildString(53) {
      append("GeneratedJsonAdapter(").append("BrandItemDetailResponse.Success").append(')') }

  public override fun fromJson(reader: JsonReader): BrandItemDetailResponse.Success {
    var color: String? = null
    var details: List<String?>? = null
    var images: List<String?>? = null
    var originalPrice: String? = null
    var path: List<String?>? = null
    var salePrice: String? = null
    var sku: String? = null
    var title: String? = null
    var url: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> color = nullableStringAdapter.fromJson(reader)
        1 -> details = nullableListOfNullableStringAdapter.fromJson(reader)
        2 -> images = nullableListOfNullableStringAdapter.fromJson(reader)
        3 -> originalPrice = nullableStringAdapter.fromJson(reader)
        4 -> path = nullableListOfNullableStringAdapter.fromJson(reader)
        5 -> salePrice = nullableStringAdapter.fromJson(reader)
        6 -> sku = nullableStringAdapter.fromJson(reader)
        7 -> title = nullableStringAdapter.fromJson(reader)
        8 -> url = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return BrandItemDetailResponse.Success(
        color = color,
        details = details,
        images = images,
        originalPrice = originalPrice,
        path = path,
        salePrice = salePrice,
        sku = sku,
        title = title,
        url = url
    )
  }

  public override fun toJson(writer: JsonWriter, value_: BrandItemDetailResponse.Success?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("color")
    nullableStringAdapter.toJson(writer, value_.color)
    writer.name("details")
    nullableListOfNullableStringAdapter.toJson(writer, value_.details)
    writer.name("images")
    nullableListOfNullableStringAdapter.toJson(writer, value_.images)
    writer.name("original_price")
    nullableStringAdapter.toJson(writer, value_.originalPrice)
    writer.name("path")
    nullableListOfNullableStringAdapter.toJson(writer, value_.path)
    writer.name("sale_price")
    nullableStringAdapter.toJson(writer, value_.salePrice)
    writer.name("sku")
    nullableStringAdapter.toJson(writer, value_.sku)
    writer.name("title")
    nullableStringAdapter.toJson(writer, value_.title)
    writer.name("url")
    nullableStringAdapter.toJson(writer, value_.url)
    writer.endObject()
  }
}
