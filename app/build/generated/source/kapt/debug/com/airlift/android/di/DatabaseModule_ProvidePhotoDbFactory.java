// Generated by Dagger (https://dagger.dev).
package com.airlift.android.di;

import android.content.Context;
import com.airlift.android.db.PhotoDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvidePhotoDbFactory implements Factory<PhotoDatabase> {
  private final Provider<Context> contextProvider;

  public DatabaseModule_ProvidePhotoDbFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public PhotoDatabase get() {
    return providePhotoDb(contextProvider.get());
  }

  public static DatabaseModule_ProvidePhotoDbFactory create(Provider<Context> contextProvider) {
    return new DatabaseModule_ProvidePhotoDbFactory(contextProvider);
  }

  public static PhotoDatabase providePhotoDb(Context context) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.providePhotoDb(context));
  }
}
