// Generated by Dagger (https://dagger.dev).
package com.airlift.android.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<Context> contextProvider;

  public NetworkModule_ProvideHttpClientFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideHttpClient(contextProvider.get());
  }

  public static NetworkModule_ProvideHttpClientFactory create(Provider<Context> contextProvider) {
    return new NetworkModule_ProvideHttpClientFactory(contextProvider);
  }

  public static OkHttpClient provideHttpClient(Context context) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideHttpClient(context));
  }
}
