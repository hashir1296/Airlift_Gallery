// Generated by Dagger (https://dagger.dev).
package com.airlift.android.di;

import com.squareup.moshi.Moshi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRetrofitFactory implements Factory<Retrofit.Builder> {
  private final Provider<Moshi> moshiProvider;

  private final Provider<OkHttpClient> httpClientProvider;

  public NetworkModule_ProvideRetrofitFactory(Provider<Moshi> moshiProvider,
      Provider<OkHttpClient> httpClientProvider) {
    this.moshiProvider = moshiProvider;
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public Retrofit.Builder get() {
    return provideRetrofit(moshiProvider.get(), httpClientProvider.get());
  }

  public static NetworkModule_ProvideRetrofitFactory create(Provider<Moshi> moshiProvider,
      Provider<OkHttpClient> httpClientProvider) {
    return new NetworkModule_ProvideRetrofitFactory(moshiProvider, httpClientProvider);
  }

  public static Retrofit.Builder provideRetrofit(Moshi moshi, OkHttpClient httpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRetrofit(moshi, httpClient));
  }
}
