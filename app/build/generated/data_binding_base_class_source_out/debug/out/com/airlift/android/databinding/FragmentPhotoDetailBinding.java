// Generated by data binding compiler. Do not edit!
package com.airlift.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.airlift.android.R;
import com.airlift.android.modules.detail.viewmodel.PhotoDetailViewModel;
import com.google.android.material.textview.MaterialTextView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentPhotoDetailBinding extends ViewDataBinding {
  @NonNull
  public final View divider1;

  @NonNull
  public final ImageView ivAvgColor;

  @NonNull
  public final ImageView ivPhoto;

  @NonNull
  public final MaterialTextView tvAvgColorLabel;

  @NonNull
  public final MaterialTextView tvDimensions;

  @NonNull
  public final MaterialTextView tvDimensionsLabel;

  @NonNull
  public final MaterialTextView tvPhotographerLabel;

  @NonNull
  public final MaterialTextView tvPhotographerName;

  @Bindable
  protected PhotoDetailViewModel mViewModel;

  protected FragmentPhotoDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      View divider1, ImageView ivAvgColor, ImageView ivPhoto, MaterialTextView tvAvgColorLabel,
      MaterialTextView tvDimensions, MaterialTextView tvDimensionsLabel,
      MaterialTextView tvPhotographerLabel, MaterialTextView tvPhotographerName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.divider1 = divider1;
    this.ivAvgColor = ivAvgColor;
    this.ivPhoto = ivPhoto;
    this.tvAvgColorLabel = tvAvgColorLabel;
    this.tvDimensions = tvDimensions;
    this.tvDimensionsLabel = tvDimensionsLabel;
    this.tvPhotographerLabel = tvPhotographerLabel;
    this.tvPhotographerName = tvPhotographerName;
  }

  public abstract void setViewModel(@Nullable PhotoDetailViewModel viewModel);

  @Nullable
  public PhotoDetailViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_photo_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPhotoDetailBinding>inflateInternal(inflater, R.layout.fragment_photo_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_photo_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPhotoDetailBinding>inflateInternal(inflater, R.layout.fragment_photo_detail, null, false, component);
  }

  public static FragmentPhotoDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPhotoDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentPhotoDetailBinding)bind(component, view, R.layout.fragment_photo_detail);
  }
}
